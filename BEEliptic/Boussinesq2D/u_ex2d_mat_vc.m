function [ mv ] = u_ex2d_mat_vc(x,y,c,beta1)
%DUDT0 Summary of this function goes here
%   Detailed explanation goes here
%beta2 == alpha == 1;
if (nargin == 3) beta1=3; end
if (nargin == 2) beta1=3; c=0.27;  end

x = ( x * sqrt(beta1));
y = ( y * sqrt(beta1));

   mv = 0.24e1 * (0.1e1 + 0.24e0 .* x .^ 2 + 0.24e0 .* y .^ 2) ./ cosh(sqrt(x .^ 2 + y .^ 2)) .* (0.1e1 + 0.95e-1 .* x .^ 2 + 0.95e-1 .* y .^ 2) .^ (-0.15e1) + c ^ 2 .* (-0.12e1 .* (1 - beta1) .* (0.1e1 - 0.177e0 .* (x .^ 2 + y .^ 2) .^ 0.1200000000e1) ./ cosh(sqrt(x .^ 2 + y .^ 2)) ./ (0.1e1 + 0.11e0 .* (x .^ 2 + y .^ 2) .^ 0.1050000000e1) - 0.12e1 .* beta1 .* (0.1e1 + 0.22e0 .* x .^ 2 + 0.22e0 .* y .^ 2) ./ cosh(sqrt(x .^ 2 + y .^ 2)) ./ (0.1e1 + 0.11e0 .* (x .^ 2 + y .^ 2) .^ 0.1200000000e1)) + c ^ 2 .* ((1 - beta1) .* (0.312172e2 .* x .^ 2 + 0.312172e2 .* y .^ 2 - 0.100834e2 .* (x .^ 2 + y .^ 2) .^ (0.3e1 ./ 0.2e1) + 0.397869e1 .* (x .^ 2 + y .^ 2) .^ 2 - 0.290619e-1 .* (x .^ 2 + y .^ 2) .^ 3) ./ (0.1e1 + 0.779734e2 .* sqrt(x .^ 2 + y .^ 2) - 0.769199e2 .* x .^ 2 - 0.769199e2 .* y .^ 2 + 0.554646e2 .* (x .^ 2 + y .^ 2) .^ (0.3e1 ./ 0.2e1) - 0.129335e2 .* (x .^ 2 + y .^ 2) .^ 2 + 0.10351e1 .* (x .^ 2 + y .^ 2) .^ (0.5e1 ./ 0.2e1) + 0.628801e0 .* (x .^ 2 + y .^ 2) .^ 3 - 0.573272e-2 .* (x .^ 2 + y .^ 2) .^ 4) + beta1 .* (0.312172e2 .* x .^ 2 + 0.312172e2 .* y .^ 2 - 0.100834e2 .* (x .^ 2 + y .^ 2) .^ (0.3e1 ./ 0.2e1) + 0.397869e1 .* (x .^ 2 + y .^ 2) .^ 2 - 0.290619e-1 .* (x .^ 2 + y .^ 2) .^ 3) ./ (0.1e1 + 0.779734e2 .* sqrt(x .^ 2 + y .^ 2) - 0.769199e2 .* x .^ 2 - 0.769199e2 .* y .^ 2 + 0.554646e2 .* (x .^ 2 + y .^ 2) .^ (0.3e1 ./ 0.2e1) - 0.129335e2 .* (x .^ 2 + y .^ 2) .^ 2 + 0.10351e1 .* (x .^ 2 + y .^ 2) .^ (0.5e1 ./ 0.2e1) + 0.628801e0 .* (x .^ 2 + y .^ 2) .^ 3 - 0.573272e-2 .* (x .^ 2 + y .^ 2) .^ 4)) .* (x.^2 - y.^2)./(x.^2 + y.^2 + 0.1e-8);
end
  