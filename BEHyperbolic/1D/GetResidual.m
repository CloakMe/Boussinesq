function crrntResidual = GetResidual(type, bt, c, Phi, coefPhiSquare, deltaPhi, zeroMatrix, derivative)
    if(strcmp(type,'pq') == 1)
        Psi = (-1) * deltaPhi -...
            2*(+1) * XDerivative( YDerivative( Phi, zeroMatrix, derivative.first), zeroMatrix, derivative.first) + coefPhiSquare;  

        crrntResidual = bt*(c^2 - 1) * deltaPhi - XDerivative(Psi, zeroMatrix,derivative.second) - YDerivative(Psi, zeroMatrix,derivative.second) -...
            XDerivative( YDerivative( 2*bt*(c^2 + 1) * Phi + 2 * Psi, zeroMatrix, derivative.first), zeroMatrix, derivative.first);
    elseif(strcmp(type, 'xt') == 1)

        crrntResidual = - bt * XDerivative(Phi, zeroMatrix,derivative.second) + bt * YDerivative(Phi, zeroMatrix,derivative.second) -...
            XDerivative( coefPhiSquare*bt*Phi.^2, zeroMatrix,derivative.second )+ ...
            XDerivative(XDerivative(Phi, zeroMatrix,derivative.second), zeroMatrix,derivative.second);
    elseif(strcmp(type, 'xte') == 1)

        crrntResidual = - bt * XDerivative(Phi, zeroMatrix,derivative.second) + bt * YDerivative(Phi, zeroMatrix,derivative.second) -...
            XDerivative( coefPhiSquare*bt*Phi.^2, zeroMatrix,derivative.second ) + ...
            XDerivative(XDerivative(Phi, zeroMatrix,derivative.second), zeroMatrix,derivative.second) - ...
            bt * XDerivative(YDerivative(Phi, zeroMatrix,derivative.second), zeroMatrix,derivative.second);
    else
        error('unknown type');
    end
end